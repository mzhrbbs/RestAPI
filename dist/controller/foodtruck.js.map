{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","save","err","send","json","message","get","find","foodtrucks","findById","params","id","foodtruck","put","delete","remove","_id","newReview","title","text","review","reviews","push","console","log"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport {Router} from 'express';\r\nimport FoodTruck from '../models/foodtruck';\r\nimport Review from '../models/review';\r\n\r\nexport default ({config,db}) => {\r\n  let api = Router();\r\n\r\n  //CRUD - Create , Read , Update , Delete\r\n\r\n  // '/v1/foodtruck/add'-- Create\r\n  api.post('/add',(req,res) => {\r\n    let newFoodTruck = new FoodTruck();\r\n    newFoodTruck.name = req.body.name;\r\n    newFoodTruck.foodtype = req.body.foodtype;\r\n    newFoodTruck.avgcost = req.body.avgcost;\r\n    newFoodTruck.geometry.coordinates = req.body.geometry.coordinates;\r\n\r\n    newFoodTruck.save((err) =>{\r\n      if (err) {\r\n        res.send(err);\r\n      }\r\n      res.json({message: \"FoodTruck saved succes!\"});\r\n    });\r\n  });\r\n\r\n  // '/v1/foodtruck ' -- Read\r\n  api.get('/', (req,res) => {\r\n    FoodTruck.find({},(err, foodtrucks) =>{\r\n      if (err){\r\n        res.send(err);\r\n      }\r\n      res.json(foodtrucks);\r\n    });\r\n  });\r\n\r\n  // 'v1/foodtruck/:id'  -- Read one\r\n  api.get('/:id', (req,res) => {\r\n    FoodTruck.findById(req.params.id, (err,foodtruck) => {\r\n      if (err){\r\n        res.send(err);\r\n      }\r\n      res.json(foodtruck);\r\n    });\r\n  });\r\n\r\n  // 'v1/foodtruck/:id' -- Update\r\n  api.put('/:id', (req,res) => {\r\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\r\n      if (err){\r\n        res.send(err);\r\n      }\r\n      foodtruck.name = req.body.name;\r\n      foodtruck.save( (err) => {\r\n        if (err) {\r\n          res.send(err);\r\n        }\r\n        res.json({message: \"FoodTruck info udpated !\"});\r\n      });\r\n    });\r\n  });\r\n\r\n  // 'v1/foodtruck/:id ' -- Delete\r\n  api.delete('/:id' , (req,res) => {\r\n    FoodTruck.remove({\r\n      _id: req.params.id\r\n    },(err,foodtruck) => {\r\n      if (err){\r\n        res.send(err);\r\n      }\r\n      res.json({message: \"FoodTruck deleted successfully !\"});\r\n    });\r\n  });\r\n\r\n  // Add review for specific food truck id\r\n  // 'v1/foodtruck/reviews/add/:id'\r\n  api.post('reviews/add/:id',(req,res) => {\r\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\r\n      if (err){\r\n        res.send(err);\r\n      }\r\n      let newReview = new Review();\r\n      newReview.title = req.body.title,\r\n      newReview.text = req.body.text,\r\n      newReview.foodtruck = foodtruck._id,\r\n      newReview.save((err,review) => {\r\n        if (err){\r\n          res.send(err);\r\n        }\r\n        foodtruck.reviews.push(newReview);\r\n        foodtruck.save((err) => {\r\n          if (err){\r\n            console.log(\"here is the error\");\r\n            res.send(err);\r\n          }\r\n          res.json({message:\"FoodTruck review saved !\"});\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  return api;\r\n}\r\n"]}