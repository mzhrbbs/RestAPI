{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","save","err","send","json","message","get","find","foodtrucks","findById","params","id","foodtruck","put","delete","remove","_id","review","newReview","title","text","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\nimport {Router} from 'express';\nimport FoodTruck from '../models/foodtruck';\nimport Review from '../models/review';\nimport {authenticate} from '../middleware/authMiddleware';\n\nexport default ({config,db}) => {\n  let api = Router();\n\n  //CRUD - Create , Read , Update , Delete\n\n  // '/v1/foodtruck/add'-- Create\n  api.post('/add', (req,res) => {\n    let newFoodTruck = new FoodTruck();\n    newFoodTruck.name = req.body.name;\n    newFoodTruck.foodtype = req.body.foodtype;\n    newFoodTruck.avgcost = req.body.avgcost;\n    newFoodTruck.geometry.coordinates = req.body.geometry.coordinates;\n\n    newFoodTruck.save((err) =>{\n      if (err) {\n        res.send(err);\n      }\n      res.json({message: \"FoodTruck saved succes!\"});\n    });\n  });\n\n  // '/v1/foodtruck ' -- Read\n  api.get('/', (req,res) => {\n    FoodTruck.find({},(err, foodtrucks) =>{\n      if (err){\n        res.send(err);\n      }\n      res.json(foodtrucks);\n    });\n  });\n\n  // 'v1/foodtruck/:id'  -- Read one\n  api.get('/:id', (req,res) => {\n    FoodTruck.findById(req.params.id, (err,foodtruck) => {\n      if (err){\n        res.send(err);\n      }\n      res.json(foodtruck);\n    });\n  });\n\n  // 'v1/foodtruck/:id' -- Update\n  api.put('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      foodtruck.name = req.body.name;\n      foodtruck.foodtype = req.body.foodtype;\n      foodtruck.avgcost = req.body.avgcost;\n      foodtruck.geometry.coordinates = req.body.geometry.coordinates;\n      foodtruck.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: 'Food Truck info updated' });\n      });\n    });\n  });\n\n  // 'v1/foodtruck/:id ' -- Delete\n  api.delete('/:id' , (req,res) => {\n    FoodTruck.remove({\n      _id: req.params.id\n    },(err,foodtruck) => {\n      if (err){\n        res.send(err);\n      }\n      Review.remove({foodtruck: req.params.id}, (err,review) => {\n        if (err){\n          res.send(err);\n        }\n\n\n      res.json({message: \"FoodTruck and its reviews deleted successfully !\"});\n    });\n    });\n  });\n\n  // Add review for specific food truck id\n  // 'v1/foodtruck/reviews/add/:id'\n  api.post('/reviews/add/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      let newReview = new Review();\n\n      newReview.title = req.body.title;\n      newReview.text = req.body.text;\n      newReview.foodtruck = foodtruck._id;\n      newReview.save((err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        foodtruck.reviews.push(newReview);\n        foodtruck.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Food truck review saved' });\n        });\n      });\n    });\n  });\n  //Get reviews for a particular foodtruck id\n  //'/v1/foodtruck/reviews/:id'\n  api.get('/reviews/:id',(req,res) => {\n    Review.find( {foodtruck: req.params.id}, (err, reviews) => {\n      if (err){\n        res.send(err);\n      }\n      res.json(reviews);\n    });\n  });\n\n\n\n  return api;\n}\n"]}